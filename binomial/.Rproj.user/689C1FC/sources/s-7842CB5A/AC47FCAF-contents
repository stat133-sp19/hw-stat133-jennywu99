---
title: "Warmup 3"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# 1) Importing Data
```{r import}
# data has header with variable names
# values separated by comma
# missing values codified ""

github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)

# a)
data_types <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer", "integer", "integer", "integer", "integer")

# b)
nba <- read.csv(datafile, colClasses = data_types)
head(nba)
str(nba, vec.len = 1)

#c)
nba2 <- read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
head(nba2)
str(nba2, vec.len = 1)

#d)
identical(nba, nba2)
```

\ 

# 2) Technical questions about importing data
## a)
Since header = FALSE here, the row containing the column names is treated as just another row of data.

## b)
Since the data types of the columns are not specified anywhere, R will decide for itself how to classify each column.

## c)
The character delimiter is not specified anywhere and the default for read.table is sep = "", which isn't true in this case.

## d)
Specifying the data type of each column returns a data frame with a smaller memory size.

## e)
If you convert the data frame into a matrix, then all the data values with be converted into the same data type. 

\ 

# 3) Examine Salary
```{r salary}
# a)
summary(nba$salary)

# b)
hist(nba$salary)

# c)
nba$salary2 <- nba$salary/1000000
hist(nba$salary2)

# d)
hist(log(nba$salary2))
## a log transformation doesn't exactly make the distribution symmetric per se, but it does make it relatively more symmetric. the shape of this new histogram is closer to that of a bell curve. the mode is slightly more centered now compared to the previous histogram which was much more skewed.

# e)
low <- log(nba$salary2) < -3
table(low)

# f)
nba[low, c("player", "weight", "height", "team", "position")]

# g)
nba <- nba[!low,]
head(nba)
dim(nba)
```

# 4) Explore Points
```{r points}
# a)
summary(nba$points)
hist(nba$points)

# b)
nba$points[nba$points == 0] <- nba$points[nba$points == 0] + 0.1
hist(log(nba$points))
## there are more outliers in this case than there were in the histograms of the players' salaries. however, similar to the log-transformed salary histogram, this histogram also has somewhat of a bellcurve shape though it is overall still skewed to the left.
```

# 5) Transforming Age into a Factor
```{r age}
# a)
boxplot(salary2 ~ age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
## overall it seems like players with ages in the middle range (late 20s, early 30s) tend to earn the highest salaries

# b)
boxplot(points ~ age, data = nba, xlab = "Age", ylab = "Total Points Scored")
## similar to the last boxplot, players with ages in the mid-range seem to score more points, but the correlation is much weaker

# c)
age2 <- nba$age
age2[age2 <= 19] <- 20
age2 <- cut(age2, breaks = c(19, 24, 29, Inf), labels = c("20-24", "25-29", "30+"))
summary(age2)
```

# 6) Plotting Salary against Points, by Age Group
```{r plot}
# a)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")

# b)
age_colors <- palette1[age2]

# c)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2), title = "Age Groups", cex = 0.8)
```

# 7) Plotting Salary against Points, by Position
```{r more plots}
# a)
boxplot(salary2 ~ position, data = nba, xlab = "Position", ylab = "Salary (in millions)")
## there doesn't appear to be an extremely significant overall difference in salaries depending on the position of the players. the median salary of the players are roughly the same for all positions. however, there is a greater variation in the interquartile range, but the most significant difference between the boxplots is that the "maximum" (Q3 + 1.5*IQR) of the boxplot for the center position is much higher than the "maximum" of the other positions.

# b)
boxplot(points ~ position, data = nba, xlab = "Position", ylab = "Total Points Scored")
## again, there doesn't appear to be an extremely significant overall difference in total points scored depending on the position of the players. the medians and the interquartile ranges are all roughly the same. there is, however, a larger degree of variation within the "maximum" values for the different boxplots, and overall it appears that there is a much larger variation in the amount of points scored by the point guards in comparison to the other positions.

# c)
palette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
pos_colors <- palette2[nba$position]

# d)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log)", ylab = "Salary (log)", col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2, legend = levels(nba$position), title = "Player Position", cex= 0.8)
```